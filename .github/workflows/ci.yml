name: CI/CD Workflow

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      
jobs:
  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install black
        run: |
          python -m pip install black
      - name: Check code formatting with black
        run: |
          black --check --diff .

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pylint
        run: |
          python -m pip install pylint
          python -m pip install -r requirements.txt
      - name: Run Pylint
        run: |
          pylint --ignore-paths=.venv .

  release:
    if: startsWith(github.ref, 'refs/tags/')  # Add this condition
    runs-on: ubuntu-latest
    needs: [lint]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install necessary packages
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Build executable
        run: |
          pyinstaller --onefile skillsync.py
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ github.ref_name }}  # Get actual pushed tag
          RELEASE_NAME: "skillsync_${{ github.ref_name }}"
        run: |
          gh release create "$RELEASE_TAG" \
            --title "$RELEASE_NAME" \
            --generate-notes
          gh release upload "$RELEASE_TAG" dist/skillsync